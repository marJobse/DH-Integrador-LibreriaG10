{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mari-pc\\\\Desktop\\\\grupo10_trabajo_final\\\\DH-Dashboard-LibreriaG10\\\\src\\\\components\\\\Categories.js\";\nimport React from 'react';\nimport CategoriesRow from './CategoriesRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nlet tableRowsData = [{\n  Categorie: 'Drama',\n  Length: '123',\n  Books: ['Libro_1', 'Libro_2']\n}, {\n  Categorie: 'Comedia',\n  Length: '142',\n  Books: ['Libro_1', 'Libro_2', 'Libro_3']\n}]; // NECESITO UN ARREGLO CON CATEGORIAS, Y QUE CADA UNA TENGA UN ARREGLO DE LIBROS DE ESA CATEGORÍA, Y SACAR ESE TOTAL\n\nfunction Categories() {\n  return (\n    /*#__PURE__*/\n\n    /* <!-- DataTales Example --> */\n    _jsxDEV(\"div\", {\n      className: \"card shadow mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered\",\n            id: \"dataTable\",\n            width: \"100%\",\n            cellSpacing: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Categorias\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total de libros\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Categorias\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total de libros\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tableRowsData.map((row, i) => {\n                return /*#__PURE__*/_createElement(CategoriesRow, { ...row,\n                  key: i,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 44\n                  }\n                });\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/Mari-pc/Desktop/grupo10_trabajo_final/DH-Dashboard-LibreriaG10/src/components/Categories.js"],"names":["React","CategoriesRow","tableRowsData","Categorie","Length","Books","Categories","map","row","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,IAAIC,aAAa,GAAG,CAChB;AACIC,EAAAA,SAAS,EAAE,OADf;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAGIC,EAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ;AAHX,CADgB,EAMhB;AACIF,EAAAA,SAAS,EAAE,SADf;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAGIC,EAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AAHX,CANgB,CAApB,C,CAaA;;AAEA,SAASC,UAAT,GAAsB;AAClB;AAAA;;AACI;AACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAO,YAAA,SAAS,EAAC,sBAAjB;AAAwC,YAAA,EAAE,EAAC,WAA3C;AAAuD,YAAA,KAAK,EAAC,MAA7D;AAAoE,YAAA,WAAW,EAAC,GAAhF;AAAA,oCACI;AAAA,qCACI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAA,qCACI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAaI;AAAA,wBAEQJ,aAAa,CAACK,GAAd,CAAkB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC1B,oCAAO,eAAC,aAAD,OAAmBD,GAAnB;AAAwB,kBAAA,GAAG,EAAEC,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,eAFD;AAFR;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAgCH;;KAjCQH,U;AAoCT,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport CategoriesRow from './CategoriesRow';\n\nlet tableRowsData = [\n    {\n        Categorie: 'Drama',\n        Length: '123',\n        Books: ['Libro_1', 'Libro_2'],\n    },\n    {\n        Categorie: 'Comedia',\n        Length: '142',\n        Books: ['Libro_1', 'Libro_2', 'Libro_3'],\n    },\n\n]\n// NECESITO UN ARREGLO CON CATEGORIAS, Y QUE CADA UNA TENGA UN ARREGLO DE LIBROS DE ESA CATEGORÍA, Y SACAR ESE TOTAL\n\nfunction Categories() {\n    return (\n        /* <!-- DataTales Example --> */\n        <div className=\"card shadow mb-4\">\n            <div className=\"card-body\">\n                <div className=\"table-responsive\">\n                    <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\n                        <thead>\n                            <tr>\n                                <th>Categorias</th>\n                                <th>Total de libros</th>\n                            </tr>\n                        </thead>\n                        <tfoot>\n                            <tr>\n                                <th>Categorias</th>\n                                <th>Total de libros</th>\n                            </tr>\n                        </tfoot>\n                        <tbody>\n                            {\n                                tableRowsData.map((row, i) => {\n                                    return <CategoriesRow {...row} key={i} />\n                                })\n                            }\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default Categories;"]},"metadata":{},"sourceType":"module"}