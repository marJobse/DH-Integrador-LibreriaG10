{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mari-pc\\\\Desktop\\\\grupo10_trabajo_final\\\\DH-Dashboard-LibreriaG10\\\\src\\\\components\\\\ContentRowTotales.js\";\nimport React, { Component } from \"react\";\nimport SmallCard from './SmallCard';\n/*  Cada set de datos es un objeto literal */\n\n/* <!-- Totales--> */\n\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet total_produductos = {\n  title: 'Total Productos',\n  color: 'primary',\n  cuantity: 21,\n  icon: \"fa-book\"\n};\n/* <!-- Total awards --> */\n\nlet total_usuarios = {\n  title: ' Total Usuarios',\n  color: 'success',\n  cuantity: '79',\n  icon: 'fa-user-check'\n};\n/* <!-- Actors quantity --> */\n\nlet total_categorias = {\n  title: 'Total Categorias',\n  color: 'warning',\n  cuantity: '49',\n  icon: 'fa-award'\n}; //http://localhost:3030/API/books/\n//http://localhost:3030/API/users/list\n\nlet cartProps = [total_produductos, total_usuarios, total_categorias];\n\nclass ContentRowTotales extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cartProps: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3030/API/books/').then(res => res.json()).then(data => this.setState({\n      cartProps: data.data\n    }, console.log(data))).catch(e => console.log(e));\n  }\n\n  mouse() {\n    const cardBody = document.querySelector('.card2');\n    cardBody.classList.toggle('bg-secondary');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: cartProps.map((movie, i) => {\n          return /*#__PURE__*/_createElement(SmallCard, { ...movie,\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 32\n            }\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContentRowTotales;","map":{"version":3,"sources":["C:/Users/Mari-pc/Desktop/grupo10_trabajo_final/DH-Dashboard-LibreriaG10/src/components/ContentRowTotales.js"],"names":["React","Component","SmallCard","total_produductos","title","color","cuantity","icon","total_usuarios","total_categorias","cartProps","ContentRowTotales","constructor","state","componentDidMount","fetch","then","res","json","data","setState","console","log","catch","e","mouse","cardBody","document","querySelector","classList","toggle","render","map","movie","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA;;AAEA;;;;AAEA,IAAIC,iBAAiB,GAAG;AACpBC,EAAAA,KAAK,EAAE,iBADa;AAEpBC,EAAAA,KAAK,EAAE,SAFa;AAGpBC,EAAAA,QAAQ,EAAE,EAHU;AAIpBC,EAAAA,IAAI,EAAE;AAJc,CAAxB;AAOA;;AAEA,IAAIC,cAAc,GAAG;AACjBJ,EAAAA,KAAK,EAAE,iBADU;AAEjBC,EAAAA,KAAK,EAAE,SAFU;AAGjBC,EAAAA,QAAQ,EAAE,IAHO;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAOA;;AAEA,IAAIE,gBAAgB,GAAG;AACnBL,EAAAA,KAAK,EAAE,kBADY;AAEnBC,EAAAA,KAAK,EAAE,SAFY;AAGnBC,EAAAA,QAAQ,EAAE,IAHS;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAAvB,C,CAMA;AACA;;AAEA,IAAIG,SAAS,GAAG,CAACP,iBAAD,EAAoBK,cAApB,EAAoCC,gBAApC,CAAhB;;AAEA,MAAME,iBAAN,SAAgCV,SAAhC,CAA0C;AAEtCW,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTH,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEV,MAAAA,SAAS,EAAES,IAAI,CAACA;AAAlB,KAAd,EAAwCE,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAAxC,CAFlB,EAGKI,KAHL,CAGWC,CAAC,IAAIH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAHhB;AAMH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAjB;AACAF,IAAAA,QAAQ,CAACG,SAAT,CAAmBC,MAAnB,CAA0B,cAA1B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAEKrB,SAAS,CAACsB,GAAV,CAAc,CAACC,KAAD,EAAQC,CAAR,KAAc;AAEzB,8BAAO,eAAC,SAAD,OAAeD,KAAf;AAAsB,YAAA,GAAG,EAAEC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH,SAJA;AAFL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAtCqC;;AAyC1C,eAAevB,iBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport SmallCard from './SmallCard';\r\n\r\n\r\n/*  Cada set de datos es un objeto literal */\r\n\r\n/* <!-- Totales--> */\r\n\r\nlet total_produductos = {\r\n    title: 'Total Productos',\r\n    color: 'primary',\r\n    cuantity: 21,\r\n    icon: \"fa-book\"\r\n}\r\n\r\n/* <!-- Total awards --> */\r\n\r\nlet total_usuarios = {\r\n    title: ' Total Usuarios',\r\n    color: 'success',\r\n    cuantity: '79',\r\n    icon: 'fa-user-check'\r\n}\r\n\r\n/* <!-- Actors quantity --> */\r\n\r\nlet total_categorias = {\r\n    title: 'Total Categorias',\r\n    color: 'warning',\r\n    cuantity: '49',\r\n    icon: 'fa-award'\r\n}\r\n//http://localhost:3030/API/books/\r\n//http://localhost:3030/API/users/list\r\n\r\nlet cartProps = [total_produductos, total_usuarios, total_categorias];\r\n\r\nclass ContentRowTotales extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cartProps: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:3030/API/books/')\r\n            .then(res => res.json())\r\n            .then(data => this.setState({ cartProps: data.data }, console.log(data)))\r\n            .catch(e => console.log(e));\r\n\r\n\r\n    }\r\n\r\n    mouse() {\r\n        const cardBody = document.querySelector('.card2');\r\n        cardBody.classList.toggle('bg-secondary');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {cartProps.map((movie, i) => {\r\n\r\n                        return <SmallCard {...movie} key={i} />\r\n\r\n                    })}\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentRowTotales;"]},"metadata":{},"sourceType":"module"}