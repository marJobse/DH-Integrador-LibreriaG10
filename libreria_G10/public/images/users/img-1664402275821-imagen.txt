    updateImage: (req, res) => {
        db.Users.findByPk(req.params.id)
            .then((user) => {
                if (req.file != 'undefined') {
                    console.log(req.file)
                    db.Users.update({ imagen: req.file.filename }, { where: { id: req.params.id } })
                }
            }).then(function (user) {
                res.render('../views/users/profile.ejs', { user: user })
            }).then

    }

<div class="user-image-div">
                        <img class="user-image-avatar" src="/images/users/<%= user.imagen %>" alt="">
                    </div>
 <img src="/images/users/<%= user.imagen%>"> alt="">


 <img class="user-image-avatar" src="../../../public/images/users/<%= user.imagen%>" alt="">
    edit: (req, res) => {
        db.Users.findByPk(req.params.id).then(function (user) {
            req.session.usuarioLogueado = user; // sino, cuando edito el usuario, el logueado es el primero sin cambios
            res.render('../views/users/userEdit.ejs', { user: req.session.usuarioLogueado });
        })
    },
    update: (req, res) => {
        db.Users.update({
            nombre: req.body.nombre,
            apellido: req.body.apellido,
            domicilio: req.body.domicilio,
        }, {
            where: {
                id: req.params.id
            }
        }).then(function (user) {
            db.Users.findByPk(req.params.id).then(function (user) {
                res.render('../views/users/profile.ejs', { user: user }) // el profile no agarra los datos pero se cambiaron
            })
        })
    },
    profile: (req, res) => {
        res.render('../views/users/profile.ejs', { user: req.session.usuarioLogueado })
    },